
+BRAKEMAN REPORT+

Application path: /home/mlehmann/apps/cf_test
Rails version: 5.0.0
Brakeman version: 3.4.1
Started at 2016-11-03 11:59:31 +0100
Duration: 0.551527772 seconds
Checks run: BasicAuth, BasicAuthTimingAttack, ContentTag, CreateWith, CrossSiteScripting, DefaultRoutes, Deserialize, DetailedExceptions, DigestDoS, DynamicFinders, EscapeFunction, Evaluation, Execute, FileAccess, FileDisclosure, FilterSkipping, ForgerySetting, HeaderDoS, I18nXSS, JRubyXML, JSONEncoding, JSONParsing, LinkTo, LinkToHref, MailTo, MassAssignment, MimeTypeDoS, ModelAttrAccessible, ModelAttributes, ModelSerialize, NestedAttributes, NestedAttributesBypass, NumberToCurrency, QuoteTableName, Redirect, RegexDoS, Render, RenderDoS, RenderInline, ResponseSplitting, RouteDoS, SQL, SQLCVEs, SSLVerify, SafeBufferManipulation, SanitizeMethods, SelectTag, SelectVulnerability, Send, SendFile, SessionManipulation, SessionSettings, SimpleFormat, SingleQuotes, SkipBeforeFilter, StripTags, SymbolDoSCVE, TranslateBug, UnsafeReflection, ValidationRegex, WithoutProtection, XMLDoS, YAMLParsing


+SUMMARY+

+-------------------+-------+
| Scanned/Reported  | Total |
+-------------------+-------+
| Controllers       | 8     |
| Models            | 6     |
| Templates         | 42    |
| Errors            | 0     |
| Security Warnings | 1 (0) |
+-------------------+-------+

+----------------------+-------+
| Warning Type         | Total |
+----------------------+-------+
| Cross Site Scripting | 1     |
+----------------------+-------+

+CONTROLLERS+
+-----------------------------+---------------------------------+----------+-------------------------------------------------+
| Name                        | Parent                          | Includes | Routes                                          |
+-----------------------------+---------------------------------+----------+-------------------------------------------------+
| ApplicationController       | ActionController::Base          |          | [None]                                          |
| CommentsController          | ApplicationController           |          | create, destroy                                 |
| OrdersController            | ApplicationController           |          | create, destroy, index, new, show               |
| PaymentsController          | ApplicationController           |          | create                                          |
| ProductsController          | ApplicationController           |          | create, destroy, edit, index, new, show, update |
| StaticPagesController       | ApplicationController           |          | featured, index, thank_you                      |
| UserRegistrationsController | Devise::RegistrationsController |          | [None]                                          |
| UsersController             | ApplicationController           |          | create, destroy, edit, index, new, show, update |
+-----------------------------+---------------------------------+----------+-------------------------------------------------+

+TEMPLATES+

devise/confirmations/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:email)                                                                                          >>
| [Escaped Output] f.email_field(:email, :autofocus => true, :value => (if resource.pending_reconfirmation? then; resource.u>>
| [Escaped Output] f.submit("Resend confirmation instructions")                                                             >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => confirmation_path(resource_name), :html => ({ :method =>>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/mailer/confirmation_instructions

+--------------------------------------------------------------------------------------------------------------+
| Output                                                                                                       |
+--------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @email                                                                                      |
| [Escaped Output] link_to("Confirm my account", confirmation_url(@resource, :confirmation_token => (@token))) |
+--------------------------------------------------------------------------------------------------------------+

devise/mailer/password_change

+----------------------------------+
| Output                           |
+----------------------------------+
| [Escaped Output] @resource.email |
+----------------------------------+

devise/mailer/reset_password_instructions

+-----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @resource.email                                                                                |
| [Escaped Output] link_to("Change my password", edit_password_url(@resource, :reset_password_token => (@token))) |
+-----------------------------------------------------------------------------------------------------------------+

devise/mailer/unlock_instructions

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] @resource.email                                                                |
| [Escaped Output] link_to("Unlock my account", unlock_url(@resource, :unlock_token => (@token))) |
+-------------------------------------------------------------------------------------------------+

devise/passwords/edit

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.hidden_field(:reset_password_token)                                                                    >>
| [Escaped Output] f.label(:password, "New password")                                                                       >>
| [Escaped Output] @minimum_password_length                                                                                 >>
| [Escaped Output] f.password_field(:password, :autofocus => true, :autocomplete => "off")                                  >>
| [Escaped Output] f.label(:password_confirmation, "Confirm new password")                                                  >>
| [Escaped Output] f.password_field(:password_confirmation, :autocomplete => "off")                                         >>
| [Escaped Output] f.submit("Change my password")                                                                           >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => password_path(resource_name), :html => ({ :method => :pu>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/passwords/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:email)                                                                                          >>
| [Escaped Output] f.email_field(:email, :autofocus => true)                                                                >>
| [Escaped Output] f.submit("Send me reset password instructions")                                                          >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => password_path(resource_name), :html => ({ :method => :po>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/registrations/edit

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] resource_name.to_s.humanize                                                                              >>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:first_name, :class => "sr-only")                                                                >>
| [Escaped Output] f.text_field(:first_name, :autofocus => true, :class => "form-control form-control-top", :placeholder => >>
| [Escaped Output] f.label(:last_name, :class => "sr-only")                                                                 >>
| [Escaped Output] f.text_field(:last_name, :autofocus => true, :class => "form-control form-control-center", :placeholder =>>
| [Escaped Output] f.label(:email, :class => "sr-only")                                                                     >>
| [Escaped Output] f.email_field(:email, :autofocus => true, :class => "form-control form-control-center", :type => "email",>>
| [Escaped Output] f.label(:password, :class => "sr-only")                                                                  >>
| [Escaped Output] f.password_field(:password, :autocomplete => "off", :class => "form-control form-control-center", :type =>>
| [Escaped Output] f.label(:password_confirmation, :class => "sr-only")                                                     >>
| [Escaped Output] f.password_field(:password_confirmation, :autocomplete => "off", :class => "form-control form-control-cen>>
| [Escaped Output] f.label(:current_password, :class => "sr-only")                                                          >>
| [Escaped Output] f.password_field(:current_password, :autocomplete => "off", :class => "form-control form-control-bottom",>>
| [Escaped Output] @minimum_password_length                                                                                 >>
| [Escaped Output] resource.unconfirmed_email                                                                               >>
| [Escaped Output] f.submit("Update", :class => "btn btn-lg btn-primary btn-block")                                         >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => ({ :method =>>>
| [Escaped Output] button_to("Cancel my account", registration_path(resource_name), :data => ({ :confirm => "Are you sure?" >>
| [Escaped Output] link_to("Back", :back)                                                                                   >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/registrations/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:first_name, :class => "sr-only")                                                                >>
| [Escaped Output] f.text_field(:first_name, :autofocus => true, :class => "form-control form-control-top", :placeholder => >>
| [Escaped Output] f.label(:last_name, :class => "sr-only")                                                                 >>
| [Escaped Output] f.text_field(:last_name, :autofocus => true, :class => "form-control form-control-center", :placeholder =>>
| [Escaped Output] f.label(:email, :class => "sr-only")                                                                     >>
| [Escaped Output] f.email_field(:email, :autofocus => true, :class => "form-control form-control-center", :type => "email",>>
| [Escaped Output] f.label(:password, :class => "sr-only")                                                                  >>
| [Escaped Output] f.password_field(:password, :autocomplete => "off", :class => "form-control form-control-center", :placeh>>
| [Escaped Output] f.label(:password_confirmation, :class => "sr-only")                                                     >>
| [Escaped Output] f.password_field(:password_confirmation, :autocomplete => "off", :class => "form-control form-control-bot>>
| [Escaped Output] @minimum_password_length                                                                                 >>
| [Escaped Output] f.submit("Sign up", :class => "btn btn-lg btn-primary btn-block")                                        >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => registration_path(resource_name)) do; [Escaped Output] d>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/sessions/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:email, :class => "sr-only")                                                                     >>
| [Escaped Output] f.email_field(:email, :autofocus => true, :class => "form-control form-control-top", :type => "email", :p>>
| [Escaped Output] f.label(:password, :class => "sr-only")                                                                  >>
| [Escaped Output] f.password_field(:password, :class => "form-control form-control-bottom", :type => "password", :placehold>>
| [Escaped Output] f.check_box(:remember_me)                                                                                >>
| [Escaped Output] f.label(:remember_me, :class => "checkbox-label")                                                        >>
| [Escaped Output] f.submit("Log in", :class => "btn btn-lg btn-primary btn-block")                                         >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => session_path(resource_name)) do; [Escaped Output] devise>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/shared/_links

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Log in", new_session_path(resource_name))                                                       >>
| [Escaped Output] link_to("Sign up", new_registration_path(resource_name))                                                 >>
| [Escaped Output] link_to("Forgot your password?", new_password_path(resource_name))                                       >>
| [Escaped Output] link_to("Didn't receive confirmation instructions?", new_confirmation_path(resource_name))               >>
| [Escaped Output] link_to("Didn't receive unlock instructions?", new_unlock_path(resource_name))                           >>
| [Escaped Output] link_to("Sign in with #{OmniAuth::Utils.camelize(provider)}", omniauth_authorize_path(resource_name, prov>>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/shared/_links.["Template:devise/confirmations/new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Log in", new_session_path(resource_name))                                                       >>
| [Escaped Output] link_to("Sign up", new_registration_path(resource_name))                                                 >>
| [Escaped Output] link_to("Forgot your password?", new_password_path(resource_name))                                       >>
| [Escaped Output] link_to("Didn't receive confirmation instructions?", new_confirmation_path(resource_name))               >>
| [Escaped Output] link_to("Didn't receive unlock instructions?", new_unlock_path(resource_name))                           >>
| [Escaped Output] link_to("Sign in with #{OmniAuth::Utils.camelize(provider)}", omniauth_authorize_path(resource_name, prov>>
+--------------------------------------------------------------------------------------------------------------------------->>

devise/unlocks/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] devise_error_messages!                                                                                   >>
| [Escaped Output] f.label(:email)                                                                                          >>
| [Escaped Output] f.email_field(:email, :autofocus => true)                                                                >>
| [Escaped Output] f.submit("Resend unlock instructions")                                                                   >>
| [Escaped Output] form_for(resource, :as => resource_name, :url => unlock_path(resource_name), :html => ({ :method => :post>>
| [Escaped Output] render(partial => "devise/shared/links", {})                                                             >>
+--------------------------------------------------------------------------------------------------------------------------->>

layouts/application

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] stylesheet_link_tag("application", :media => "all", :"data-turbolinks-track" => "reload")                >>
| [Escaped Output] javascript_include_tag("application", :"data-turbolinks-track" => "reload")                              >>
| [Escaped Output] csrf_meta_tags                                                                                           >>
| [Escaped Output] asset_path("wall.jpg")                                                                                   >>
| [Escaped Output] image_tag("logo_s.png", :class => "img-responsive")                                                      >>
| [Escaped Output] text_field_tag(:q, params[:q], :class => "form-control", :placeholder => "Search for...")                >>
| [Escaped Output] submit_tag("search", :class => "btn btn-default")                                                        >>
| [Escaped Output] form_tag("/products", :method => "get", :class => "input-group") do; [Escaped Output] text_field_tag(:q, >>
| [Escaped Output] link_to(current_user.email, edit_user_registration_path, :style => "color: white;")                      >>
| [Escaped Output] link_to("Logout", destroy_user_session_path, :method => :delete, :class => "btn btn-default", :style => ">>
| [Escaped Output] link_to("Login", new_user_session_path, :class => "btn btn-default", :style => "margin-top: 10px;")      >>
| [Escaped Output] notice                                                                                                   >>
| [Escaped Output] alert                                                                                                    >>
| [Escaped Output] static_pages_index_path                                                                                  >>
| [Escaped Output] products_path                                                                                            >>
| [Escaped Output] static_pages_about_path                                                                                  >>
| [Escaped Output] static_pages_contact_path                                                                                >>
| [Escaped Output] yield                                                                                                    >>
| [Escaped Output] asset_path("wall.jpg")                                                                                   >>
+--------------------------------------------------------------------------------------------------------------------------->>

layouts/application.["ApplicationController#configure_permitted_parameters"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] stylesheet_link_tag("application", :media => "all", :"data-turbolinks-track" => "reload")                >>
| [Escaped Output] javascript_include_tag("application", :"data-turbolinks-track" => "reload")                              >>
| [Escaped Output] csrf_meta_tags                                                                                           >>
| [Escaped Output] asset_path("wall.jpg")                                                                                   >>
| [Escaped Output] image_tag("logo_s.png", :class => "img-responsive")                                                      >>
| [Escaped Output] text_field_tag(:q, params[:q], :class => "form-control", :placeholder => "Search for...")                >>
| [Escaped Output] submit_tag("search", :class => "btn btn-default")                                                        >>
| [Escaped Output] form_tag("/products", :method => "get", :class => "input-group") do; [Escaped Output] text_field_tag(:q, >>
| [Escaped Output] link_to(current_user.email, edit_user_registration_path, :style => "color: white;")                      >>
| [Escaped Output] link_to("Logout", destroy_user_session_path, :method => :delete, :class => "btn btn-default", :style => ">>
| [Escaped Output] link_to("Login", new_user_session_path, :class => "btn btn-default", :style => "margin-top: 10px;")      >>
| [Escaped Output] notice                                                                                                   >>
| [Escaped Output] alert                                                                                                    >>
| [Escaped Output] static_pages_index_path                                                                                  >>
| [Escaped Output] products_path                                                                                            >>
| [Escaped Output] static_pages_about_path                                                                                  >>
| [Escaped Output] static_pages_contact_path                                                                                >>
| [Escaped Output] yield                                                                                                    >>
| [Escaped Output] asset_path("wall.jpg")                                                                                   >>
+--------------------------------------------------------------------------------------------------------------------------->>

layouts/mailer

+------------------------+
| Output                 |
+------------------------+
| [Escaped Output] yield |
+------------------------+

orders/index

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                    |
| [Escaped Output] order.product_id                                                                          |
| [Escaped Output] order.user_id                                                                             |
| [Escaped Output] order.total                                                                               |
| [Escaped Output] link_to("Destroy", order, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
+------------------------------------------------------------------------------------------------------------+

orders/index.["OrdersController#index"]

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                        |
| [Escaped Output] Order.new.product_id                                                                          |
| [Escaped Output] Order.new.user_id                                                                             |
| [Escaped Output] Order.new.total                                                                               |
| [Escaped Output] link_to("Destroy", Order.new, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
+----------------------------------------------------------------------------------------------------------------+

products/_comments

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] comment.user.first_name                                                                                  >>
| [Escaped Output] "#{time_ago_in_words(comment.created_at)} ago"                                                           >>
| [Escaped Output] link_to("<span class=\"glyphicon glyphicon-remove\"></span>".html_safe, product_comment_path(comment.prod>>
| [Escaped Output] comment.rating                                                                                           >>
| [Escaped Output] comment.body                                                                                             >>
| [Escaped Output] will_paginate(@comments)                                                                                 >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_comments.["ProductsController#show", "Template:products/show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (Unresolved Model).new.user.first_name                                                                   >>
| [Escaped Output] "#{time_ago_in_words((Unresolved Model).new.created_at)} ago"                                            >>
| [Escaped Output] link_to("<span class=\"glyphicon glyphicon-remove\"></span>".html_safe, product_comment_path((Unresolved >>
| [Escaped Output] (Unresolved Model).new.rating                                                                            >>
| [Escaped Output] (Unresolved Model).new.body                                                                              >>
| [Escaped Output] will_paginate(Product.find(params[:id]).comments.order("created_at DESC").paginate(:page => params[:page]>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_comments.["Template:products/show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] comment.user.first_name                                                                                  >>
| [Escaped Output] "#{time_ago_in_words(comment.created_at)} ago"                                                           >>
| [Escaped Output] link_to("<span class=\"glyphicon glyphicon-remove\"></span>".html_safe, product_comment_path(comment.prod>>
| [Escaped Output] comment.rating                                                                                           >>
| [Escaped Output] comment.body                                                                                             >>
| [Escaped Output] will_paginate(@comments)                                                                                 >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_form

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@product.errors.count, "error")                                                                >>
| [Escaped Output] msg                                                                                                      >>
| [Escaped Output] f.label(:name, :class => "control-label col-sm-2")                                                       >>
| [Escaped Output] f.text_field(:name, :class => "form-control")                                                            >>
| [Escaped Output] f.error_span(:name)                                                                                      >>
| [Escaped Output] f.label(:description, :class => "control-label col-sm-2")                                                >>
| [Escaped Output] f.text_field(:description, :class => "form-control")                                                     >>
| [Escaped Output] f.error_span(:description)                                                                               >>
| [Escaped Output] f.label(:color, :class => "control-label col-sm-2")                                                      >>
| [Escaped Output] f.text_field(:color, :class => "form-control")                                                           >>
| [Escaped Output] f.error_span(:color)                                                                                     >>
| [Escaped Output] f.label(:image_url, :class => "control-label col-sm-2")                                                  >>
| [Escaped Output] f.text_field(:image_url, :class => "form-control")                                                       >>
| [Escaped Output] f.error_span(:image_url)                                                                                 >>
| [Escaped Output] f.label(:price, :class => "control-label col-sm-2")                                                      >>
| [Escaped Output] f.text_field(:price, :class => "form-control")                                                           >>
| [Escaped Output] f.error_span(:price)                                                                                     >>
| [Escaped Output] f.submit(nil, :class => "btn btn-primary")                                                               >>
| [Escaped Output] link_to(t(".cancel", :default => t("helpers.links.cancel")), products_path, :class => "btn btn-default") >>
| [Escaped Output] form_for(@product, :html => ({ :class => "form-horizontal center product" })) do; if @product.errors.any?>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_form.["ProductsController#create", "Template:products/new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Product.new(product_params).errors.count, "error")                                             >>
| [Escaped Output] msg                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name, :class => "control-label col-sm-2")                                         >>
| [Escaped Output] FormBuilder.new.text_field(:name, :class => "form-control")                                              >>
| [Escaped Output] FormBuilder.new.error_span(:name)                                                                        >>
| [Escaped Output] FormBuilder.new.label(:description, :class => "control-label col-sm-2")                                  >>
| [Escaped Output] FormBuilder.new.text_field(:description, :class => "form-control")                                       >>
| [Escaped Output] FormBuilder.new.error_span(:description)                                                                 >>
| [Escaped Output] FormBuilder.new.label(:color, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:color, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:color)                                                                       >>
| [Escaped Output] FormBuilder.new.label(:image_url, :class => "control-label col-sm-2")                                    >>
| [Escaped Output] FormBuilder.new.text_field(:image_url, :class => "form-control")                                         >>
| [Escaped Output] FormBuilder.new.error_span(:image_url)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:price, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:price, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:price)                                                                       >>
| [Escaped Output] FormBuilder.new.submit(nil, :class => "btn btn-primary")                                                 >>
| [Escaped Output] link_to(t(".cancel", :default => t("helpers.links.cancel")), products_path, :class => "btn btn-default") >>
| [Escaped Output] form_for(Product.new(product_params), :html => ({ :class => "form-horizontal center product" })) do; if P>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_form.["ProductsController#edit", "Template:products/edit"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Product.find(params[:id]).errors.count, "error")                                               >>
| [Escaped Output] (Unresolved Model).new                                                                                   >>
| [Escaped Output] FormBuilder.new.label(:name, :class => "control-label col-sm-2")                                         >>
| [Escaped Output] FormBuilder.new.text_field(:name, :class => "form-control")                                              >>
| [Escaped Output] FormBuilder.new.error_span(:name)                                                                        >>
| [Escaped Output] FormBuilder.new.label(:description, :class => "control-label col-sm-2")                                  >>
| [Escaped Output] FormBuilder.new.text_field(:description, :class => "form-control")                                       >>
| [Escaped Output] FormBuilder.new.error_span(:description)                                                                 >>
| [Escaped Output] FormBuilder.new.label(:color, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:color, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:color)                                                                       >>
| [Escaped Output] FormBuilder.new.label(:image_url, :class => "control-label col-sm-2")                                    >>
| [Escaped Output] FormBuilder.new.text_field(:image_url, :class => "form-control")                                         >>
| [Escaped Output] FormBuilder.new.error_span(:image_url)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:price, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:price, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:price)                                                                       >>
| [Escaped Output] FormBuilder.new.submit(nil, :class => "btn btn-primary")                                                 >>
| [Escaped Output] link_to(t(".cancel", :default => t("helpers.links.cancel")), products_path, :class => "btn btn-default") >>
| [Escaped Output] form_for(Product.find(params[:id]), :html => ({ :class => "form-horizontal center product" })) do; if Pro>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_form.["ProductsController#new", "Template:products/new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Product.new.errors.count, "error")                                                             >>
| [Escaped Output] msg                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name, :class => "control-label col-sm-2")                                         >>
| [Escaped Output] FormBuilder.new.text_field(:name, :class => "form-control")                                              >>
| [Escaped Output] FormBuilder.new.error_span(:name)                                                                        >>
| [Escaped Output] FormBuilder.new.label(:description, :class => "control-label col-sm-2")                                  >>
| [Escaped Output] FormBuilder.new.text_field(:description, :class => "form-control")                                       >>
| [Escaped Output] FormBuilder.new.error_span(:description)                                                                 >>
| [Escaped Output] FormBuilder.new.label(:color, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:color, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:color)                                                                       >>
| [Escaped Output] FormBuilder.new.label(:image_url, :class => "control-label col-sm-2")                                    >>
| [Escaped Output] FormBuilder.new.text_field(:image_url, :class => "form-control")                                         >>
| [Escaped Output] FormBuilder.new.error_span(:image_url)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:price, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:price, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:price)                                                                       >>
| [Escaped Output] FormBuilder.new.submit(nil, :class => "btn btn-primary")                                                 >>
| [Escaped Output] link_to(t(".cancel", :default => t("helpers.links.cancel")), products_path, :class => "btn btn-default") >>
| [Escaped Output] form_for(Product.new, :html => ({ :class => "form-horizontal center product" })) do; if Product.new.error>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_form.["Template:products/edit"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@product.errors.count, "error")                                                                >>
| [Escaped Output] msg                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name, :class => "control-label col-sm-2")                                         >>
| [Escaped Output] FormBuilder.new.text_field(:name, :class => "form-control")                                              >>
| [Escaped Output] FormBuilder.new.error_span(:name)                                                                        >>
| [Escaped Output] FormBuilder.new.label(:description, :class => "control-label col-sm-2")                                  >>
| [Escaped Output] FormBuilder.new.text_field(:description, :class => "form-control")                                       >>
| [Escaped Output] FormBuilder.new.error_span(:description)                                                                 >>
| [Escaped Output] FormBuilder.new.label(:color, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:color, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:color)                                                                       >>
| [Escaped Output] FormBuilder.new.label(:image_url, :class => "control-label col-sm-2")                                    >>
| [Escaped Output] FormBuilder.new.text_field(:image_url, :class => "form-control")                                         >>
| [Escaped Output] FormBuilder.new.error_span(:image_url)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:price, :class => "control-label col-sm-2")                                        >>
| [Escaped Output] FormBuilder.new.text_field(:price, :class => "form-control")                                             >>
| [Escaped Output] FormBuilder.new.error_span(:price)                                                                       >>
| [Escaped Output] FormBuilder.new.submit(nil, :class => "btn btn-primary")                                                 >>
| [Escaped Output] link_to(t(".cancel", :default => t("helpers.links.cancel")), products_path, :class => "btn btn-default") >>
| [Escaped Output] form_for(@product, :html => ({ :class => "form-horizontal center product" })) do; if @product.errors.any?>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_new_comment

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.label(:body, "Comment:")                                                                               >>
| [Escaped Output] f.text_area(:body, :class => "form-control")                                                             >>
| [Escaped Output] f.label(:rating, "Rating:")                                                                              >>
| [Escaped Output] f.submit("Submit", :class => "btn btn-default")                                                          >>
| [Escaped Output] form_for([@product, @product.comments.build]) do; [Escaped Output] f.label(:body, "Comment:");[Escaped Ou>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_new_comment.["ProductsController#create", "Template:products/show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FormBuilder.new.label(:body, "Comment:")                                                                 >>
| [Escaped Output] FormBuilder.new.text_area(:body, :class => "form-control")                                               >>
| [Escaped Output] FormBuilder.new.label(:rating, "Rating:")                                                                >>
| [Escaped Output] FormBuilder.new.submit("Submit", :class => "btn btn-default")                                            >>
| [Escaped Output] form_for([Product.new(product_params), Product.new(product_params).comments.build]) do; [Escaped Output] >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_new_comment.["ProductsController#show", "Template:products/show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FormBuilder.new.label(:body, "Comment:")                                                                 >>
| [Escaped Output] FormBuilder.new.text_area(:body, :class => "form-control")                                               >>
| [Escaped Output] FormBuilder.new.label(:rating, "Rating:")                                                                >>
| [Escaped Output] FormBuilder.new.submit("Submit", :class => "btn btn-default")                                            >>
| [Escaped Output] form_for([Product.find(params[:id]), Product.find(params[:id]).comments.build]) do; [Escaped Output] Form>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_new_comment.["Template:products/show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FormBuilder.new.label(:body, "Comment:")                                                                 >>
| [Escaped Output] FormBuilder.new.text_area(:body, :class => "form-control")                                               >>
| [Escaped Output] FormBuilder.new.label(:rating, "Rating:")                                                                >>
| [Escaped Output] FormBuilder.new.submit("Submit", :class => "btn btn-default")                                            >>
| [Escaped Output] form_for([@product, @product.comments.build]) do; [Escaped Output] FormBuilder.new.label(:body, "Comment:>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/_product

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] asset_path(product.image_url)                          |
| [Escaped Output] asset_path(product.image_url)                          |
| [Escaped Output] link_to(product.name, product)                         |
| [Escaped Output] product.description                                    |
| [Escaped Output] product.average_rating                                 |
| [Escaped Output] number_to_currency(product.price, :unit => "\u{20ac}") |
+-------------------------------------------------------------------------+

products/edit

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => ([:"helpers.titles.edit", "Edit %{model}"]), :model => model_class.model_name.hum>>
| [Escaped Output] render(partial => "form", {})                                                                            >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/edit.["ProductsController#edit"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => ([:"helpers.titles.edit", "Edit %{model}"]), :model => Product.model_name.human.t>>
| [Escaped Output] render(partial => "form", {})                                                                            >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/index

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] t(".title", :default => model_class.model_name.human.pluralize.titleize) |
| [Escaped Output] render(action => @products, {})                                          |
| [Escaped Output] will_paginate(@comments)                                                 |
+-------------------------------------------------------------------------------------------+

products/index.["ProductsController#index"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => Product.model_name.human.pluralize.titleize)                                     >>
| [Escaped Output] render(action => ((Product.where("description ilike ? OR color ilike ?", "%#{params[:q]}%", "%#{params[:q>>
| [Escaped Output] will_paginate(@comments)                                                                                 >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/new

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => ([:"helpers.titles.new", "New %{model}"]), :model => model_class.model_name.human>>
| [Escaped Output] render(partial => "form", {})                                                                            >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/new.["ProductsController#new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => ([:"helpers.titles.new", "New %{model}"]), :model => Product.model_name.human.tit>>
| [Escaped Output] render(partial => "form", {})                                                                            >>
+--------------------------------------------------------------------------------------------------------------------------->>

products/show

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => @product.name)                                                                   >>
| [Escaped Output] asset_path(@product.image_url)                                                                           >>
| [Escaped Output] model_class.human_attribute_name(:description)                                                           >>
| [Escaped Output] @product.description                                                                                     >>
| [Escaped Output] model_class.human_attribute_name(:color)                                                                 >>
| [Escaped Output] @product.color                                                                                           >>
| [Escaped Output] model_class.human_attribute_name(:price)                                                                 >>
| [Escaped Output] number_to_currency(@product.price, :unit => "\u{20ac}")                                                  >>
| [Escaped Output] render(partial => "shared/stripe_checkout_button", {})                                                   >>
| [Escaped Output] form_tag("/payments/create") do; [Escaped Output] render(partial => "shared/stripe_checkout_button", {});>>
| [Escaped Output] link_to("Login to buy", new_user_session_path, :class => "stripe-button")                                >>
| [Escaped Output] @product.average_rating                                                                                  >>
| [Escaped Output] render(partial => "new_comment", {})                                                                     >>
| [Escaped Output] render(partial => "comments", {})                                                                        >>
| [Escaped Output] link_to(t(".back", :default => t("helpers.links.back")), products_path, :class => "btn btn-default")     >>
| [Escaped Output] link_to(t(".edit", :default => t("helpers.links.edit")), edit_product_path(@product), :class => "btn btn->>
| [Escaped Output] link_to(t(".destroy", :default => t("helpers.links.destroy")), product_path(@product), :method => "delete>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/show.["ProductsController#create"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => Product.new(product_params).name)                                                >>
| [Escaped Output] asset_path(Product.new(product_params).image_url)                                                        >>
| [Escaped Output] Product.human_attribute_name(:description)                                                               >>
| [Escaped Output] Product.new(product_params).description                                                                  >>
| [Escaped Output] Product.human_attribute_name(:color)                                                                     >>
| [Escaped Output] Product.new(product_params).color                                                                        >>
| [Escaped Output] Product.human_attribute_name(:price)                                                                     >>
| [Escaped Output] number_to_currency(Product.new(product_params).price, :unit => "\u{20ac}")                               >>
| [Escaped Output] render(partial => "shared/stripe_checkout_button", {})                                                   >>
| [Escaped Output] form_tag("/payments/create") do; [Escaped Output] render(partial => "shared/stripe_checkout_button", {});>>
| [Escaped Output] link_to("Login to buy", new_user_session_path, :class => "stripe-button")                                >>
| [Escaped Output] Product.new(product_params).average_rating                                                               >>
| [Escaped Output] render(partial => "new_comment", {})                                                                     >>
| [Escaped Output] render(partial => "comments", {})                                                                        >>
| [Escaped Output] link_to(t(".back", :default => t("helpers.links.back")), products_path, :class => "btn btn-default")     >>
| [Escaped Output] link_to(t(".edit", :default => t("helpers.links.edit")), edit_product_path(Product.new(product_params)), >>
| [Escaped Output] link_to(t(".destroy", :default => t("helpers.links.destroy")), product_path(Product.new(product_params)),>>
+--------------------------------------------------------------------------------------------------------------------------->>

products/show.["ProductsController#show"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] t(".title", :default => Product.find(params[:id]).name)                                                  >>
| [Escaped Output] asset_path(Product.find(params[:id]).image_url)                                                          >>
| [Escaped Output] Product.human_attribute_name(:description)                                                               >>
| [Escaped Output] Product.find(params[:id]).description                                                                    >>
| [Escaped Output] Product.human_attribute_name(:color)                                                                     >>
| [Escaped Output] Product.find(params[:id]).color                                                                          >>
| [Escaped Output] Product.human_attribute_name(:price)                                                                     >>
| [Escaped Output] number_to_currency(Product.find(params[:id]).price, :unit => "\u{20ac}")                                 >>
| [Escaped Output] render(partial => "shared/stripe_checkout_button", {})                                                   >>
| [Escaped Output] form_tag("/payments/create") do; [Escaped Output] render(partial => "shared/stripe_checkout_button", {});>>
| [Escaped Output] link_to("Login to buy", new_user_session_path, :class => "stripe-button")                                >>
| [Escaped Output] Product.find(params[:id]).average_rating                                                                 >>
| [Escaped Output] render(partial => "new_comment", {})                                                                     >>
| [Escaped Output] render(partial => "comments", {})                                                                        >>
| [Escaped Output] link_to(t(".back", :default => t("helpers.links.back")), products_path, :class => "btn btn-default")     >>
| [Escaped Output] link_to(t(".edit", :default => t("helpers.links.edit")), edit_product_path(Product.find(params[:id])), :c>>
| [Escaped Output] link_to(t(".destroy", :default => t("helpers.links.destroy")), product_path(Product.find(params[:id])), :>>
+--------------------------------------------------------------------------------------------------------------------------->>

shared/_stripe_checkout_button

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] Rails.configuration.stripe[:publishable_key] |
| [Escaped Output] asset_path("logo_sq_b.png")                  |
| [Escaped Output] current_user.email                           |
| [Escaped Output] @product.name                                |
| [Escaped Output] (@product.price * 100).to_i                  |
| [Escaped Output] hidden_field_tag(:product_id, @product.id)   |
| [Escaped Output] hidden_field_tag(:user_id, current_user.id)  |
+---------------------------------------------------------------+

shared/_stripe_checkout_button.["ProductsController#create", "Template:products/show"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] Rails.configuration.stripe[:publishable_key]                  |
| [Escaped Output] asset_path("logo_sq_b.png")                                   |
| [Escaped Output] current_user.email                                            |
| [Escaped Output] Product.new(product_params).name                              |
| [Escaped Output] (Product.new(product_params).price * 100).to_i                |
| [Escaped Output] hidden_field_tag(:product_id, Product.new(product_params).id) |
| [Escaped Output] hidden_field_tag(:user_id, current_user.id)                   |
+--------------------------------------------------------------------------------+

shared/_stripe_checkout_button.["ProductsController#show", "Template:products/show"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] Rails.configuration.stripe[:publishable_key]                |
| [Escaped Output] asset_path("logo_sq_b.png")                                 |
| [Escaped Output] current_user.email                                          |
| [Escaped Output] Product.find(params[:id]).name                              |
| [Escaped Output] (Product.find(params[:id]).price * 100).to_i                |
| [Escaped Output] hidden_field_tag(:product_id, Product.find(params[:id]).id) |
| [Escaped Output] hidden_field_tag(:user_id, current_user.id)                 |
+------------------------------------------------------------------------------+

shared/_stripe_checkout_button.["Template:products/show"]

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] Rails.configuration.stripe[:publishable_key] |
| [Escaped Output] asset_path("logo_sq_b.png")                  |
| [Escaped Output] current_user.email                           |
| [Escaped Output] @product.name                                |
| [Escaped Output] (@product.price * 100).to_i                  |
| [Escaped Output] hidden_field_tag(:product_id, @product.id)   |
| [Escaped Output] hidden_field_tag(:user_id, current_user.id)  |
+---------------------------------------------------------------+

static_pages/_carousel

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] index                          |
| [Escaped Output] asset_path(product.image_url)  |
| [Escaped Output] link_to(product.name, product) |
+-------------------------------------------------+

static_pages/_carousel.["StaticPagesController#featured", "Template:static_pages/featured"]

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] index                          |
| [Escaped Output] asset_path(product.image_url)  |
| [Escaped Output] link_to(product.name, product) |
+-------------------------------------------------+

static_pages/_carousel.["StaticPagesController#index", "Template:static_pages/index"]

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] index                          |
| [Escaped Output] asset_path(product.image_url)  |
| [Escaped Output] link_to(product.name, product) |
+-------------------------------------------------+

static_pages/_carousel.["Template:static_pages/featured"]

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] index                          |
| [Escaped Output] asset_path(product.image_url)  |
| [Escaped Output] link_to(product.name, product) |
+-------------------------------------------------+

static_pages/about

+---------------------------------------------+
| Output                                      |
+---------------------------------------------+
| [Escaped Output] asset_path("racebike.jpg") |
+---------------------------------------------+

static_pages/contact

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] asset_path("bikebrick.jpg")                                                                              >>
| [Escaped Output] flash[:notice]                                                                                           >>
| [Escaped Output] label_tag(:name)                                                                                         >>
| [Escaped Output] text_field_tag(:name, nil, :class => "form-control", :placeholder => "Enter Name")                       >>
| [Escaped Output] label_tag(:email, "Email Address")                                                                       >>
| [Escaped Output] text_field_tag(:email, nil, :class => "form-control", :placeholder => "Enter Email")                     >>
| [Escaped Output] label_tag(:message)                                                                                      >>
| [Escaped Output] text_area_tag(:message, nil, :class => "form-control", :placeholder => "Enter Message")                  >>
| [Escaped Output] submit_tag("Send", :class => "btn btn-primary")                                                          >>
| [Escaped Output] form_tag("/static_pages/thank_you") do; [Escaped Output] label_tag(:name);[Escaped Output] text_field_tag>>
+--------------------------------------------------------------------------------------------------------------------------->>

static_pages/featured

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] asset_path("wall.jpg")            |
| [Escaped Output] @products[0].color                |
| [Escaped Output] @products[0].color                |
| [Escaped Output] render(partial => "carousel", {}) |
+----------------------------------------------------+

static_pages/featured.["StaticPagesController#featured"]

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] asset_path("wall.jpg")                                                                        |
| [Escaped Output] Product.where(:color => ["red", "blue", "black", "orange", "white"].sample).limit(4)[0].color |
| [Escaped Output] Product.where(:color => ["red", "blue", "black", "orange", "white"].sample).limit(4)[0].color |
| [Escaped Output] render(partial => "carousel", {})                                                             |
+----------------------------------------------------------------------------------------------------------------+

static_pages/index

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] asset_path("wall.jpg")            |
| [Escaped Output] render(partial => "carousel", {}) |
+----------------------------------------------------+

static_pages/index.["StaticPagesController#index"]

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] asset_path("wall.jpg")            |
| [Escaped Output] render(partial => "carousel", {}) |
+----------------------------------------------------+

static_pages/landing_page

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] asset_path(product.image_url)  |
| [Escaped Output] link_to(product.name, product) |
+-------------------------------------------------+

static_pages/thank_you

+----------------------------------------------+
| Output                                       |
+----------------------------------------------+
| [Escaped Output] asset_path("bikebrick.jpg") |
+----------------------------------------------+

static_pages/thank_you.["StaticPagesController#thank_you"]

+----------------------------------------------+
| Output                                       |
+----------------------------------------------+
| [Escaped Output] asset_path("bikebrick.jpg") |
+----------------------------------------------+

user_mailer/contact_form

+---------------------------+
| Output                    |
+---------------------------+
| [Escaped Output] @message |
+---------------------------+

user_mailer/payment

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] @appname                                        |
| [Escaped Output] @name                                           |
| [Escaped Output] number_to_currency(@price, :unit => "\u{20ac}") |
| [Escaped Output] @appname                                        |
+------------------------------------------------------------------+

user_mailer/welcome

+---------------------------+
| Output                    |
+---------------------------+
| [Escaped Output] @appname |
| [Escaped Output] @appname |
+---------------------------+

users/_form

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(user.errors.count, "error")                                                                    >>
| [Escaped Output] message                                                                                                  >>
| [Escaped Output] f.label(:first_name)                                                                                     >>
| [Escaped Output] f.text_field(:first_name)                                                                                >>
| [Escaped Output] f.label(:last_name)                                                                                      >>
| [Escaped Output] f.text_field(:last_name)                                                                                 >>
| [Escaped Output] f.label(:email)                                                                                          >>
| [Escaped Output] f.email_field(:email)                                                                                    >>
| [Escaped Output] f.submit                                                                                                 >>
| [Escaped Output] form_for(@user, :html => ({ :class => "form-horizontal center user" })) do; if user.errors.any? then; [Es>>
+--------------------------------------------------------------------------------------------------------------------------->>

users/_form.["Template:users/edit"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(user.errors.count, "error")                                                                    >>
| [Escaped Output] message                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:first_name)                                                                       >>
| [Escaped Output] FormBuilder.new.text_field(:first_name)                                                                  >>
| [Escaped Output] FormBuilder.new.label(:last_name)                                                                        >>
| [Escaped Output] FormBuilder.new.text_field(:last_name)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                            >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                   >>
| [Escaped Output] form_for(@user, :html => ({ :class => "form-horizontal center user" })) do; if user.errors.any? then; [Es>>
+--------------------------------------------------------------------------------------------------------------------------->>

users/_form.["UsersController#create", "Template:users/new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(user.errors.count, "error")                                                                    >>
| [Escaped Output] message                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:first_name)                                                                       >>
| [Escaped Output] FormBuilder.new.text_field(:first_name)                                                                  >>
| [Escaped Output] FormBuilder.new.label(:last_name)                                                                        >>
| [Escaped Output] FormBuilder.new.text_field(:last_name)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                            >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                   >>
| [Escaped Output] form_for(User.new(user_params), :html => ({ :class => "form-horizontal center user" })) do; if user.error>>
+--------------------------------------------------------------------------------------------------------------------------->>

users/_form.["UsersController#edit", "Template:users/edit"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(user.errors.count, "error")                                                                    >>
| [Escaped Output] message                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:first_name)                                                                       >>
| [Escaped Output] FormBuilder.new.text_field(:first_name)                                                                  >>
| [Escaped Output] FormBuilder.new.label(:last_name)                                                                        >>
| [Escaped Output] FormBuilder.new.text_field(:last_name)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                            >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                   >>
| [Escaped Output] form_for(User.find(params[:id]), :html => ({ :class => "form-horizontal center user" })) do; if user.erro>>
+--------------------------------------------------------------------------------------------------------------------------->>

users/_form.["UsersController#new", "Template:users/new"]

+--------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                    >>
+--------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(user.errors.count, "error")                                                                    >>
| [Escaped Output] message                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:first_name)                                                                       >>
| [Escaped Output] FormBuilder.new.text_field(:first_name)                                                                  >>
| [Escaped Output] FormBuilder.new.label(:last_name)                                                                        >>
| [Escaped Output] FormBuilder.new.text_field(:last_name)                                                                   >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                            >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                   >>
| [Escaped Output] form_for(User.new, :html => ({ :class => "form-horizontal center user" })) do; if user.errors.any? then; >>
+--------------------------------------------------------------------------------------------------------------------------->>

users/edit

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", { :user => (@user) }) |
| [Escaped Output] link_to("Show", @user)                          |
| [Escaped Output] link_to("Back", users_path)                     |
+------------------------------------------------------------------+

users/edit.["UsersController#edit"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", { :user => User.find(params[:id]) }) |
| [Escaped Output] link_to("Show", User.find(params[:id]))                        |
| [Escaped Output] link_to("Back", users_path)                                    |
+---------------------------------------------------------------------------------+

users/index

+-----------------------------------------------------------------------------------------------------------+
| Output                                                                                                    |
+-----------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                   |
| [Escaped Output] user.first_name                                                                          |
| [Escaped Output] user.last_name                                                                           |
| [Escaped Output] user.email                                                                               |
| [Escaped Output] link_to("Show", user)                                                                    |
| [Escaped Output] link_to("Edit", edit_user_registration_path(user))                                       |
| [Escaped Output] link_to("Destroy", user, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New User", new_user_path)                                                       |
+-----------------------------------------------------------------------------------------------------------+

users/index.["UsersController#index"]

+---------------------------------------------------------------------------------------------------------------+
| Output                                                                                                        |
+---------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                       |
| [Escaped Output] User.new.first_name                                                                          |
| [Escaped Output] User.new.last_name                                                                           |
| [Escaped Output] User.new.email                                                                               |
| [Escaped Output] link_to("Show", User.new)                                                                    |
| [Escaped Output] link_to("Edit", edit_user_registration_path(User.new))                                       |
| [Escaped Output] link_to("Destroy", User.new, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New User", new_user_path)                                                           |
+---------------------------------------------------------------------------------------------------------------+

users/new

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", { :user => (@user) }) |
| [Escaped Output] link_to("Back", users_path)                     |
+------------------------------------------------------------------+

users/new.["UsersController#create"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", { :user => User.new(user_params) }) |
| [Escaped Output] link_to("Back", users_path)                                   |
+--------------------------------------------------------------------------------+

users/new.["UsersController#new"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", { :user => User.new }) |
| [Escaped Output] link_to("Back", users_path)                      |
+-------------------------------------------------------------------+

users/show

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                              |
| [Escaped Output] model_class.human_attribute_name(:first_name)                                       |
| [Escaped Output] @user.first_name                                                                    |
| [Escaped Output] model_class.human_attribute_name(:last_name)                                        |
| [Escaped Output] @user.last_name                                                                     |
| [Escaped Output] model_class.human_attribute_name(:email)                                            |
| [Escaped Output] @user.email                                                                         |
| [Escaped Output] link_to("Edit", edit_user_registration_path(@user), :class => "btn btn-primary")    |
| [Escaped Output] link_to("Back", users_path, :class => "btn btn-default", :style => "color: black;") |
+------------------------------------------------------------------------------------------------------+

users/show.["UsersController#create"]

+-------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                           |
| [Escaped Output] User.human_attribute_name(:first_name)                                                           |
| [Escaped Output] User.new(user_params).first_name                                                                 |
| [Escaped Output] User.human_attribute_name(:last_name)                                                            |
| [Escaped Output] User.new(user_params).last_name                                                                  |
| [Escaped Output] User.human_attribute_name(:email)                                                                |
| [Escaped Output] User.new(user_params).email                                                                      |
| [Escaped Output] link_to("Edit", edit_user_registration_path(User.new(user_params)), :class => "btn btn-primary") |
| [Escaped Output] link_to("Back", users_path, :class => "btn btn-default", :style => "color: black;")              |
+-------------------------------------------------------------------------------------------------------------------+

users/show.["UsersController#show"]

+--------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                             |
+--------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                            |
| [Escaped Output] User.human_attribute_name(:first_name)                                                            |
| [Escaped Output] User.find(params[:id]).first_name                                                                 |
| [Escaped Output] User.human_attribute_name(:last_name)                                                             |
| [Escaped Output] User.find(params[:id]).last_name                                                                  |
| [Escaped Output] User.human_attribute_name(:email)                                                                 |
| [Escaped Output] User.find(params[:id]).email                                                                      |
| [Escaped Output] link_to("Edit", edit_user_registration_path(User.find(params[:id])), :class => "btn btn-primary") |
| [Escaped Output] link_to("Back", users_path, :class => "btn btn-default", :style => "color: black;")               |
+--------------------------------------------------------------------------------------------------------------------+




+SECURITY WARNINGS+

+------------+-------+--------+----------------------+---------------------------------------------------------------------->>
| Confidence | Class | Method | Warning Type         | Message                                                              >>
+------------+-------+--------+----------------------+---------------------------------------------------------------------->>
| Medium     |       |        | Cross Site Scripting | Rails 5.0.0 content_tag does not escape double quotes in attribute va>>
+------------+-------+--------+----------------------+---------------------------------------------------------------------->>

